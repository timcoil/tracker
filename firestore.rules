rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Habits collection rules
    match /habits/{habitId} {
      allow read: if isAuthenticated() && (
        !exists(/databases/$(database)/documents/habits/$(habitId)) ||
        resource.data.userId == request.auth.uid
      );
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // Habit completions collection rules
    match /habitCompletions/{completionId} {
      allow read: if isAuthenticated() && (
        !exists(/databases/$(database)/documents/habitCompletions/$(completionId)) ||
        resource.data.userId == request.auth.uid
      );
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // Habit analytics collection rules
    match /habitAnalytics/{analyticsId} {
      allow read: if isAuthenticated() && (
        !exists(/databases/$(database)/documents/habitAnalytics/$(analyticsId)) ||
        resource.data.userId == request.auth.uid
      );
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // Achievements collection rules
    match /achievements/{achievementId} {
      allow read: if isAuthenticated() && (
        !exists(/databases/$(database)/documents/achievements/$(achievementId)) ||
        resource.data.userId == request.auth.uid
      );
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // Insights collection rules
    match /insights/{insightId} {
      allow read: if isAuthenticated() && (
        !exists(/databases/$(database)/documents/insights/$(insightId)) ||
        resource.data.userId == request.auth.uid
      );
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
  }
} 